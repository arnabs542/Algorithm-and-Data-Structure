//https://leetcode.com/problems/generate-parentheses/
/*
Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.
For example, given n = 3, a solution set is:

[
  "((()))",
  "(()())",
  "(())()",
  "()(())",
  "()()()"
]
*/
class Solution {
public:
  vector<string> generateParenthesis(int n) {
      vector<string> ret;
      help(ret,"",n,n);
      
      return ret;
  }
  //left is number of "(", and right is number of ")"
  void help(vector<string> &ret,string str, int left, int right){
      if(left==0 && right==0){
          ret.push_back(str);
          return;
      }
      if(left>0)
          help(ret,str+"(",left-1,right);
      if(left<right) //valid Parentheses starts with "("
          help(ret,str+")",left,right-1);
  }
};
